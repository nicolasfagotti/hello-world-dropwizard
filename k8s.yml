apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: hello-world-dropwizard
  labels:
    backstage.io/kubernetes-id: hello-world-dropwizard
  annotations:
    notifications.argoproj.io/subscribe.on-analysis-run-error.slack: argo-notifications-testing
    notifications.argoproj.io/subscribe.on-analysis-run-failed.slack: argo-notifications-testing
    notifications.argoproj.io/subscribe.on-analysis-run-running.slack: argo-notifications-testing
    notifications.argoproj.io/subscribe.on-rollout-aborted.slack: argo-notifications-testing
    notifications.argoproj.io/subscribe.on-rollout-completed.slack: argo-notifications-testing
    notifications.argoproj.io/subscribe.on-rollout-step-completed.slack: argo-notifications-testing
spec:
  selector:
    matchLabels:
      app: hello-world-dropwizard
  replicas: 2
  revisionHistoryLimit: 0 # Default to 10 if not specified
  rollbackWindow:
    revisions: 0
  analysis:
    successfulRunHistoryLimit: 1
    unsuccessfulRunHistoryLimit: 5
  template:
    metadata:
      labels:
        app: hello-world-dropwizard
        backstage.io/kubernetes-id: hello-world-dropwizard
    spec:
      containers:
      - image: nicolasfagotti/hello-world-dropwizard:1.17.7
        name: hello-world-dropwizard
      # initContainers:
      # - name: init-healthcheck
      #   image: nicolasfagotti/hello-world-dropwizard:1.17.7
      #   command: ['sh', '-c', "until curl -s 'http://localhost:8883/healthcheck' | grep -q 'true'; do echo waiting for healthcheck; sleep 2; done"]
  strategy:
    canary:
      trafficRouting:
        istio:
          destinationRule:
            name: helloworld-destrule
            canarySubsetName: canary
            stableSubsetName: stable
          virtualService:
            name: helloworld-vsvc
            routes:
              - primary
      scaleDownDelaySeconds: 60
      steps:
      #  - experiment:
      #       duration: 15m
      #       templates:
      #       - name: baseline
      #         specRef: stable
      #         weight: 25
      #       - name: canary
      #         specRef: canary
      #         weight: 25
      #       analyses:
      #       - name: gloster-analyzer
      #         templateName: gloster-analyzer
      #         requiredForCompletion: true
      #         args:
      #         - name: service-name
      #           value: "testDS"
      #         - name: start-time
      #           value: "{{ experiment.availableAt }}"
      #         - name: end-time
      #           value: "{{ experiment.finishedAt }}"
      #         - name: stable-hash
      #           valueFrom:
      #             podTemplateHashValue: Stable
      #         - name: canary-hash
      #           valueFrom:
      #             podTemplateHashValue: Latest
        - analysis:
            templates:
            - templateName: hello-initial-rollout-analysis
        - setWeight: 1
        - pause:
            duration: 5
        - setWeight: 20
        - pause:
            duration: 5
        - setWeight: 40
        - pause:
            duration: 5
        - setWeight: 60
        - pause:
            duration: 5
        - setWeight: 80
        - pause:
            duration: 5
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: helloworld-vsvc
spec:
  gateways:
    - istio-ingress/ingress-http
  hosts:
    - helloworld.local
  http:
    - name: primary       # Should match rollout.spec.strategy.canary.trafficRouting.istio.virtualServices.routes
      route:
      - destination:
          host: rollouts-helloworld
          subset: stable  # referenced in canary.trafficRouting.istio.destinationRule.stableSubsetName
        weight: 100
      - destination:
          host: rollouts-helloworld
          subset: canary  # referenced in canary.trafficRouting.istio.destinationRule.canarySubsetName
        weight: 0
---
apiVersion: v1
kind: Service
metadata:
  name: rollouts-helloworld
  labels:
    backstage.io/kubernetes-id: hello-world-dropwizard
spec:
  type: ClusterIP
  ports:
    - name: "hello-world"
      port: 8882
    - name: "hello-world-admin"
      port: 8883
  selector:
    app: hello-world-dropwizard
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: helloworld-destrule
spec:
  host: rollouts-helloworld
  subsets:
  - name: canary   # referenced in canary.trafficRouting.istio.destinationRule.canarySubsetName
    labels:        # labels will be injected with canary rollouts-pod-template-hash value
      app: hello-world-dropwizard
  - name: stable   # referenced in canary.trafficRouting.istio.destinationRule.stableSubsetName
    labels:        # labels will be injected with stable rollouts-pod-template-hash value
      app: hello-world-dropwizard
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: min-aca-analyzer
spec:
  metrics:
  - name: aca-analyzer
    count: 5
    failureLimit: 1
    interval: 1m
    provider:
      web:
        url: "http://aca-analyzer.upwork-services.svc.cluster.local:8882/analysis/hash1/hash2"
        timeoutSeconds: 20 # defaults to 10 seconds
        jsonPath: "{$.data.ok}"
    successCondition: result == true
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: hello-initial-rollout-analysis
spec:
  metrics:
  - name: db-health-validation
    count: 1
    failureLimit: 0
    interval: 1m
    provider:
      web:
        url: "http://hello-world-dropwizard.upwork-services.svc.cluster.local:8883/healthcheck"
        timeoutSeconds: 20 # defaults to 10 seconds
        jsonPath: "{$.deadlocks.healthy}"
    successCondition: result == true
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: AnalysisTemplate
# metadata:
#   name: aca-analyzer
# spec:
#   args:
#   - name: start-time
#   - name: end-time
#   - name: stable-hash
#   - name: canary-hash
#   metrics:
#   - name: aca-analyzer
#     count: 10
#     failureLimit: 1
#     interval: 2m
#     provider:
#       web:
#         url: "http://aca-analyzer.upwork-services.svc.cluster.local:8882/analysis/{{ args.stable-hash }}/{{ args.canary-hash }}"
#         timeoutSeconds: 20 # defaults to 10 seconds
#         jsonPath: "{$.data.ok}"
#     successCondition: result == true
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: AnalysisTemplate
# metadata:
#   name: gloster-analyzer
# spec:
#   args:
#   - name: service-name
#   metrics:
#   - name: gloster-analyzer
#     initialDelay: "0"
#     count: 10
#     interval: 2m
#     failureLimit: 4
#     provider:
#       web:
#         url: "http://aca-analyzer.upwork-services.svc.cluster.local:8882/analysis/process/{{ args.service-name }}/score"
#         jsonPath: "{$}"
#     successCondition: "result.score >= 0.9 && result.confidence >= 0.1"
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: AnalysisTemplate
# metadata:
#   name: mann-whitney
# spec:
#   args:
#   - name: start-time
#   - name: end-time
#   - name: stable-hash
#   - name: canary-hash
#   metrics:
#   - name: mann-whitney
#     interval: 60s
#     failureLimit: 1
#     count: 5
#     provider:
#       kayenta:
#         address: http://kayenta-load-balancer.kayenta.svc.cluster.local:8090
#         application: hello-world-dropwizard
#         metricsAccountName: canary-prometheus
#         canaryConfigName: hello-world-config
#         configurationAccountName: in-memory-store-account
#         storageAccountName: in-memory-store-account
#         threshold:
#           pass: 90
#           marginal: 75
#         scopes:
#         - name: default
#           controlScope:
# #            scope: app=hello-world-dropwizard and rollouts-pod-template-hash={{args.stable-hash}}
#             scope: "rollouts_pod_template_hash=\"{{args.stable-hash}}\""
#             step: 30                      # How many seconds between each metric datapoint to query
#             start: "{{args.start-time}}"
#             end: "{{args.end-time}}"
#             region: "upwork-services"     # This can be anything. It is only used for building queries
#           experimentScope:
# #            scope: app=hello-world-dropwizard and rollouts-pod-template-hash={{args.canary-hash}}
#             scope: "rollouts_pod_template_hash=\"{{args.canary-hash}}\""
#             step: 30
#             start: "{{args.start-time}}"
#             end: "{{args.end-time}}"
#             region: "upwork-services"
